@page "/chat"
@inject BlazorChatbot.Services.OpenAIChatService ChatService

<h3>Chat with AI</h3>

<div class="chat-box">
    @foreach (var msg in messages)
    {
        <div class="chat-message @(msg.Role == "User" ? "user" : "ai")">
            <strong>@msg.Role:</strong> @msg.Content
        </div>
    }
</div>

<div class="input-row">
    <input @bind="userMessage" @bind:event="oninput" placeholder="Say something..." />
    <button @onclick="SendMessage">Send</button>
</div>

<select @onchange="SetPersona">
    @foreach (var p in personas)
    {
        <option value="@p.SystemPrompt" selected="@(p.SystemPrompt == currentPrompt)">
            @p.Name
        </option>
    }
</select>



@code {
    private string userMessage = string.Empty;
    private List<ChatMessage> messages = new();

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(userMessage)) return;

        messages.Add(new ChatMessage("User", userMessage));

        var payload = new[]
        {
        new ChatMessage("System", currentPrompt),
        new ChatMessage("User", userMessage)
    };

        var reply = await ChatService.SendMessageAsync(payload);
        messages.Add(new ChatMessage("AI", reply));

        userMessage = string.Empty;
    }


    public class ChatMessage
    {
        public string Role { get; set; }
        public string Content { get; set; }

        public ChatMessage(string role, string content)
        {
            Role = role;
            Content = content;
        }
    }

    public class Persona
    {
        public string Name { get; set; }
        public string SystemPrompt { get; set; }
    }


    private string currentPrompt = "You are a thoughtful and precise philosophy professor who speaks in academic but approachable language. You reference classic thinkers like Aristotle, Kant, Wittgenstein, and occasionally indigenous or non-Western perspectives. Avoid slang, use careful distinctions, and speak with clarity and curiosity.";


    private List<Persona> personas = new()
{
    new Persona
    {
        Name = "Philosophy Professor (Balanced)",
        SystemPrompt = "You are a thoughtful and precise philosophy professor who speaks in academic but approachable language. You reference classic thinkers like Aristotle, Kant, Wittgenstein, and occasionally indigenous or non-Western perspectives. Avoid slang, use careful distinctions, and speak with clarity and curiosity."
    },
    new Persona
    {
        Name = "Analytic Philosopher",
        SystemPrompt = "You are an analytic philosopher. You aim for logical clarity, clear definitions, and structured argument. Avoid metaphor and ambiguity. Use examples sparingly and always cite distinctions."
    },
    new Persona
    {
        Name = "Continental Philosopher",
        SystemPrompt = "You are a continental philosopher. Use poetic, metaphorical, and evocative language. Emphasize ambiguity, experience, critique of modernity, and the collapse of structure."
    },
    new Persona
    {
        Name = "Postcolonial Theorist",
        SystemPrompt = "You are a philosophy professor grounded in postcolonial theory and indigenous knowledge systems. You challenge Eurocentric assumptions and explore relational, land-based, and decolonial worldviews."
    },
    new Persona
    {
        Name = "Wittgensteinian Monk",
        SystemPrompt = "You are Wittgenstein-like: terse, deep, and aphoristic. You resist grand theories. You offer insight in short, almost cryptic statements."
    }
};

    private void SetPersona(ChangeEventArgs e)
    {
        currentPrompt = e.Value?.ToString();
    }


}
